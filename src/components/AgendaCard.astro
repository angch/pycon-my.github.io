---
import { marked } from "marked";
type Speaker = {
  code?: string;
  name: string;
  biography: string;
  avatar?: string;
  email?: string;
};
const { title, desc, room, time, img, name, work, speakers} = Astro.props;
let speakers2 = speakers as Speaker[];
const htmlDesc = desc ? marked.parse(desc) : "";
const htmlWork = work ? marked.parse(work) : "";

---

<div class="flex flex-col gap-2 p-6 border border-black-600 rounded-lg shadow">
    <h5 class="text-2xl font-bold tracking-tight text-black-800">
        {title}
    </h5>
    <p class="flex md:hidden text-black-600">{time}</p>

    {
        room &&
            (room === "JC 1" ? (
                <div class="badge badge-primary">{room}</div>
            ) : room === "JC 2" ? (
                <div class="badge badge-secondary">{room}</div>
            ) : (
                <div class="badge badge-ghost">{room}</div>
            ))
    }
    {desc && <p set:html={htmlDesc} />}
    {speakers2.map((speaker) => (
        <div class="flex flex-row items-center">
            {speaker.avatar && (
                <div class="avatar">
                    <div class="w-16 rounded-full">
                        <img src={speaker.avatar} />
                    </div>
                </div>
            )}
            {!speaker.avatar && (
                <div class="avatar">
                    <div class="w-16 rounded-full">
                        <img src="https://placehold.co/400?text=Speaker" />
                    </div>
                </div>
            )}
            <div class="flex flex-col pl-4">
                <p class="font-bold text-black-800">{speaker.name}</p>
                <p class="text-sm text-black-600">
                    {speaker.biography && <p set:html={speaker.biography} />}
                </p>
            </div>
        </div>
      ))}
</div>
